rm(list = ls())
# setwd("~/Desktop/Session1")
# install.packages(c("ggplot2", "dplyr", "ggmap"))
library(ggplot2)
library(dplyr)
library(ggmap)
## MAKE A BASE MAP
center <- geocode("Imperial Palace of Japan", source = "google")
center_lat <- center[1] %>% as.numeric()
center_lon <- center[2] %>% as.numeric()
base_map <- get_map(location = c(center_lat, center_lon),
zoom = 13,
# maptype = "roadmap",
# maptype = "hybrid",
maptype = "satellite",
source = "google",
color = "bw")
## MAKE POINTS TO BE ADDED
name <- data.frame(name = c("Keio University", "Waseda University"))
location <- geocode(c("2-15-45 Mita, Minato-ku, Tokyo",
"1-6-1 NishiWaseda, Shinjuku-ku, Tokyo"))
uni <- bind_cols(name, location) # Merge two data frames
## SHOW A MAP
ggmap(base_map) +
geom_point(data = uni,
aes(x = lon, y = lat),
color = "yellow",
size = 5) +
geom_text(data = uni,
aes(x = lon, y = lat + 0.003, label = name),
color = "yellow") +
labs(title = "Locations of Keio University and Waseda University",
x = "Longitude",
y = "Latitude")
## SAVE THE MAP
ggsave("figure/keiowaseda.pdf", scale = 1, width = 9, height = 9)
getwd()
setwd("~/Desktop/R/visualization/Session1")
source('~/Desktop/R/visualization/Session1/Session1_script.R')
rm(list = ls())
# setwd("~/Desktop/Session1")
# install.packages(c("ggplot2", "dplyr", "ggmap"))
library(ggplot2)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggmap")
center <- geocode("Imperial Palace of Japan", source = "google")
center_lat <- center[1] %>% as.numeric()
library(ggplot2)
library(dplyr)
library(ggmap)
## MAKE A BASE MAP
center <- geocode("Imperial Palace of Japan", source = "google")
center_lat <- center[1] %>% as.numeric()
center_lon <- center[2] %>% as.numeric()
base_map <- get_map(location = c(center_lat, center_lon),
zoom = 13,
# maptype = "roadmap",
# maptype = "hybrid",
maptype = "satellite",
source = "google",
color = "bw")
## MAKE POINTS TO BE ADDED
name <- data.frame(name = c("Keio University", "Waseda University"))
location <- geocode(c("2-15-45 Mita, Minato-ku, Tokyo",
"1-6-1 NishiWaseda, Shinjuku-ku, Tokyo"))
uni <- bind_cols(name, location) # Merge two data frames
## SHOW A MAP
ggmap(base_map) +
geom_point(data = uni,
aes(x = lon, y = lat),
color = "yellow",
size = 5) +
geom_text(data = uni,
aes(x = lon, y = lat + 0.003, label = name),
color = "yellow") +
labs(title = "Locations of Keio University and Waseda University",
x = "Longitude",
y = "Latitude")
## SAVE THE MAP
ggsave("figure/keiowaseda.pdf", scale = 1, width = 9, height = 9)
install.packages("gapminder")
install.packages("gganimate")
setwd("~/Desktop/R/visualization/Session11")
rm(list = ls())
options(stringsAsFactors = FALSE)
library(dplyr)
install.packages("dplyr")
install.packages("tidyr")
install.packages("openxlsx")
install.packages("gridExtra")
install.packages("ggmap")
install.packages("maptools")
install.packages("gpclib")
install.packages("plotly")
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(gridExtra)
library(ggmap)
library(maptools)
library(gpclib)
library(plotly)
data <- "data/Online-data-for-chapter-2-whr-2016.xlsx"
happinessData <- read.xlsx(data, sheet = 3) %>%
rename(score = `Happiness.score`) %>%
select(Country, score)
top20 <- happinessData %>%
top_n(20)
bottom20 <- happinessData %>%
arrange(score)
bottom20 <- bottom20[1:20,]
dataCcode <- "http://www.qogdata.pol.gu.se/data/qog_bas_cs_jan16.csv"
ccode <- read.csv(dataCcode) %>%
select(cname, ccodealp) %>%
rename(id = `ccodealp`,
Country = `cname`)
top20 <- top20 %>% left_join(ccode, by = "Country")
bottom20 <- bottom20 %>% left_join(ccode, by = "Country")
top20$id[top20$Country == "Puerto Rico"] <- "PRI"
bottom20$id[bottom20$Country == "Ivory Coast"] <- "CIV"
dataMap <- "data/HiResWorldMapWithISO3.csv"
worldmap <- read.csv(dataMap)
worldmap_top20 <- full_join(worldmap, top20, by = "id")
worldmap_bottom20 <- full_join(worldmap, bottom20, by = "id")
others <- worldmap_top20 %>%
filter(is.na(Country))
worldmap_top20 <- worldmap_top20 %>%
filter(!is.na(Country))
worldmap_bottom20 <- worldmap_bottom20 %>%
filter(!is.na(Country))
happinessMap <- ggplot() +
geom_polygon(data = others,
aes(x = long,
y = lat,
group = group),
fill = "grey") +
geom_polygon(data = worldmap_top20,
aes(text = paste("Country:", Country),
x = long,
y = lat,
group = group,
fill = score),
color = "white") +
geom_polygon(data = worldmap_bottom20,
aes(text = paste("Country:", Country),
x = long,
y = lat,
group = group,
fill = score),
color = "white") +
scale_fill_gradient2(low = "blue",
high = "red",
mid = "light green",
midpoint = 5.382185) + # mean(happinessData$score)
labs(title = "The Top 10% and the Bottom 10% Happiest Countries of 2016",
x = "",
y = "",
fill = "Happiness score") +
coord_equal() +
theme_gray() +
theme(legend.position = "bottom")
happinessMap
ggplotly(happinessMap)
ggsave("figure/Session11_figure1.pdf", width = 10, height = 7.5)
